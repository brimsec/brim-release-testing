name: Brim macOS release candidate creation

on:
  push:
    branches:
      - rc-v*

jobs:
  build:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.14'
    - uses: denolib/setup-deno@v2
      with:
        deno-version: v1.x
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Set NPM Cache Directory
      id: set-npm-cache-dir
      run: echo "::set-output name=npm_cache_dir::$(npm config get cache)"
    - name: Clear Extraneous Runner Cache
      # Clear on-runner cache before we create our own cache to prevent
      # slower build times. See https://github.com/brimsec/brim/pull/590
      # and https://github.com/brimsec/brim/issues/641
      run: rm -rf "${NPM_CACHE:?}"
      env:
        NPM_CACHE: ${{ steps.set-npm-cache-dir.outputs.npm_cache_dir }}
      shell: bash
    - name: Cache node modules
      uses: actions/cache@v1
      # Change the cache name any time you want to start with a cleared
      # cache.
      env:
        cache-name: cache-node-modules-ci-v4
      with:
        path: ${{ steps.set-npm-cache-dir.outputs.npm_cache_dir }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
    - run: npm install --no-audit
    - run: npm run build
    - name: create build keychain and import Developer ID certificate into it
      run: |
        security create-keychain -p password build
        security default-keychain -s build
        security unlock-keychain -p password build
        f=$(mktemp)
        echo ${{ secrets.APPLE_DEVELOPER_ID_CERT_P12_BASE64 }} | base64 -d > $f
        security import $f -k build -A -T /usr/bin/codesign -T /usr/bin/security -f pkcs12  -P ${{ secrets.APPLE_DEVELOPER_ID_CERT_PASSPHRASE }}
        rm $f
        security set-key-partition-list -S apple-tool:,apple: -k password build
        security find-identity -p codesigning -v
    - name: build signed and notarized package
      run: |
        node ./scripts/release --darwin --notarize
      env:
        APPLEID_USER: ${{ secrets.APPLEID_USER }}
        APPLEID_PASSWORD: ${{ secrets.APPLEID_PASSWORD }}
    - name: run gatekeeper assessment on notarized package
      run: spctl --assess --type execute --verbose --ignore-cache --no-cache dist/packages/Brim-darwin-x64/Brim.app
    - name: Setup Google Cloud Platform
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
        service_account_key: ${{ secrets.GCLOUD_CREDENTIAL_RELEASES }}
    - name: Upload release artifacts to Google Cloud Storage bucket
      run: |
        gsutil rm -rf gs://${{ secrets.GCLOUD_BUCKET_RELEASES }}/brim/macos/${{ steps.extract_branch.outputs.branch }} || true
        gsutil mv dist/installers gs://${{ secrets.GCLOUD_BUCKET_RELEASES }}/brim/macos/${{ steps.extract_branch.outputs.branch }}
